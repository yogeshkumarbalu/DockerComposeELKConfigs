---
- name: run docker-compose on all hosts in inventory file
  hosts: all
  become: yes

  tasks:
  - name: block for ELK Stack and this block is rescued with mail notification
    block:
    - name: stop current running containers
      shell: "docker stop $(docker ps -aq)"
      ignore_errors: yes

    - name: remove all docker containers
      shell: "docker rm $(docker ps -aq)"
      ignore_errors: yes

    - name: remove all docker images
      shell: "docker rmi $(docker images -q)"
      ignore_errors: yes
  
    - name: stop the docker service
      service:
        name: docker
        state: stopped
      ignore_error: yes

    - name: remove the docker packages
      yum:
       name: "{{ packages }}"
       state: absent
      vars:
        packages: 
        - docker
        - docker-client
        - docker-client-latest
        - docker-common
        - docker-latest
        - docker-engine

    - name: install docker again
      yum:
       name: "{{ packages }}"
       state: latest
       enablerepo: "amzn2extra-docker"
      vars:
        packages: 
        - docker
  
    - name: start the docker service
      service:
        name: docker
        state: started
    
    - name: add the ansible user to docker group to execure docker commands
      user:
        name: ansiadmin
        groups: docker
        append: yes

    - name: Install docker-compose
      get_url:
        url : https://github.com/docker/compose/releases/download/1.25.1-rc1/docker-compose-Linux-x86_64
        dest: /usr/bin/docker-compose
        mode: 'u+x,g+x'

    - name: install elasticsearch python library
      pip:
        name: elasticsearch
        executable: pip3
      when: inventory_hostname == 'localhost'

    - name: Run elasticsearch, kibana and logstash from compose file
      command: docker-compose -f docker-compose.yml up -d

    - name: run filebeats in docker
      command: docker-compose -f ab-fb-docker-compose.yml up -d

    - name: Pause for 50 seconds for kibana to start
      pause:
        seconds: 59

    - name: run the integration tests written in python script (GET)
      command: python3 ab-integration-tests.py
      register: output
      failed_when: '"errorELKIntegration" in output.stdout'
      when: inventory_hostname == 'localhost'

    - name: run the functional tests written in python script (PUT)
      command: python3 ab-func-tests.py
      register: output
      failed_when: '"errorELKFunctional" in output.stdout'
      when: inventory_hostname == 'localhost'
  
    - name: run the load tests written in python script
      command: python3 ab-load-tests.py  --es_address localhost --indices 4 --documents 5 --seconds 120 --clients 5
      register: output
      failed_when: '"errorELK" in output.stdout'
      when: inventory_hostname == 'localhost'

    rescue:
    - name: when any of tasks fail, mail notification
      debug:
        msg: "notifying the users for failed tasks"
    - name: end the play
      meta: end_play
